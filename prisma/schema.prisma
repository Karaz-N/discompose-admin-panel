generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Place {
  id String @id(map: "Place_pkey") @default(cuid())

  name            String       @unique(map: "Place_name_key")
  latitude        Float?
  longitude       Float?
  events          Event[]
  images          Image[]
  manuscriptsFrom Manuscript[] @relation("sent-from")
  manuscriptsTo   Manuscript[] @relation("received-to")
  prints          Print[]

  @@map("places")
}

model Document {
  record String @id

  documentRecord     String
  summary            String?
  author             String?
  link               String?
  eventId            String?
  archive            String?
  imageId            String?
  manuscriptId       String?
  manuscriptEvent    String?
  printId            String?
  type               DocumentType
  associatedDocument Document     @relation("association", fields: [documentRecord], references: [record], onDelete: Cascade)
  documents          Document[]   @relation("association")
  event              Event?       @relation(fields: [eventId], references: [id], onDelete: Cascade)
  image              Image?       @relation(fields: [imageId], references: [id])
  eventMention       Manuscript?  @relation("otherEvent-ref", fields: [manuscriptEvent], references: [id])
  manuscript         Manuscript?  @relation("manuscript-ref", fields: [manuscriptId], references: [id])
  print              Print?       @relation(fields: [printId], references: [id])

  @@map("documents")
}

model Event {
  id String @id @default(cuid())

  year      Int?
  type      EventType
  placeId   String
  documents Document[]
  place     Place      @relation(fields: [placeId], references: [id])

  @@unique([year, type, placeId])
  @@map("events")
}

model Image {
  id String @id @default(cuid())

  artist    String?
  author    String?
  title     String?
  museum    String?
  content   String?
  date      String?
  placeId   String?
  documents Document[]
  place     Place?     @relation(fields: [placeId], references: [id])

  @@map("images")
}

model Manuscript {
  id String @id @default(cuid())

  author      String?
  writtenAt   String?
  receivedAt  String?
  placeId     String?
  toPlaceId   String?
  recipient   String?
  language    String?
  otherEvents Document[] @relation("otherEvent-ref")
  documents   Document[] @relation("manuscript-ref")
  from        Place?     @relation("sent-from", fields: [placeId], references: [id])
  to          Place?     @relation("received-to", fields: [toPlaceId], references: [id])

  @@map("manuscripts")
}

model Print {
  id String @id @default(cuid())

  otherPlaces String[]
  language    String?
  title       String?
  year        String?
  notes       String?
  USTC        String?
  writer      String?
  information String?
  dedicatee   String?
  placeId     String?
  Document    Document[]
  place       Place?     @relation(fields: [placeId], references: [id])

  @@map("prints")
}

enum DocumentType {
  Manuscript
  Print
  Image
}

enum EventType {
  EARTHQUAKE
  FLOOD
  HURRICANE
  ERUPTION
  FIRE
  STORM
}
