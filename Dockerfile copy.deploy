FROM node:current-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# ARG DATABASE_URL
# ARG JWT_SECRET

COPY package.json package-lock.json ./
RUN  npm install --production

FROM node:current-alpine AS builder

WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

ENV NEXT_TELEMETRY_DISABLED 1

ENV DATABASE_URL=postgresql://root:password@172.17.0.2:5432/discompose?schema=public&connect_timeout=60
ENV JWT_SECRET=vOoJnLji0MFm7ito9ICPLLJm5xfeU2axjWEKfhBy0xdr0Q/1gVC9xoFzgcLF6Jita8AXICsx00INot188LRUYg==

RUN npx prisma generate
RUN npx prisma db push

RUN npm run build

FROM node:current-alpine AS runner
WORKDIR /app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

USER nextjs

EXPOSE 3000

ENV PORT 3000

CMD ["npm", "start"]